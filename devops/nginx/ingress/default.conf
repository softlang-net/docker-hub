# resolver with docker dns=127.0.0.11:53
#resolver 127.0.0.11 valid=15s ipv6=off;
#resolver_timeout 5s;
#proxy_read_timeout 300s;
server {
    listen 10083;
    # Define available domains and filling up subdomain variable 
    server_name ~^(?<subdomain>.+)\.domain\.com domain.com;
    # Set up content-type header
    add_header Content-Type text/plain;
    # Is subdomain is empty then show message without subdomain
    if ($subdomain = "") {
        return 200 "Welcome to domain.com";
    }
    # Otherwise 
    return 200 "Welcome to $subdomain.domain.com";
}

server {
    listen 10082;
    server_name  _;
    default_type text/html;
    
    location /debug {
        return 200 "$http_host, $host, ${server_port}, $scheme\n";
    }
    location / {
        proxy_set_header Host $http_host;
        # $http_ingress is from the request Header
        proxy_pass $http_ingress$request_uri;
    }
}
#PCRE
server {
    listen 10081;
    server_name  _;
    default_type text/html;

    # for host, upgrade-websocket...
    proxy_set_header Host $http_host;

    # my_api max is 66 characters
    location ~ "^/api/(?<my_api>([^/]{1,66}))" {
		return 200 'api is $my_api, url=$request_uri\n';
	}

	location ~ ^/app/(?<my_app>([^/]+)) {
		return 200 'app is $my_app, url=$request_uri\n';
	}

	location ~ ^/my-(?<my_ui>([^/]+)) {
		return 200 'my to my-$my_ui, url=$request_uri\n';
	}

	location ~ ^/(?<my_ui>([^/]+)) {
		return 200 'proxy to $my_ui, url=$request_uri\n';
        #proxy_pass http://$my_ui$request_uri;
	}

	location /test {
		proxy_pass http://127.0.0.1:8000/;
	}
    location /debug {
        return 200 'debug >> $request_uri';
    }
}