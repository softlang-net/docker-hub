# softlang.net
FROM debian:stretch-slim
SHELL ["/bin/bash", "-xo", "pipefail", "-c"]

# Generate locale C.UTF-8 for postgres and general locale data
ENV LANG C.UTF-8

# Use backports to avoid install some libs with pip
RUN echo 'deb http://deb.debian.org/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list

# Install some deps, lessc and less-plugin-clean-css, and wkhtmltopdf
RUN apt-get update \
        && apt-get install -y --no-install-recommends \
            ca-certificates \
            curl \
            dirmngr \
            fonts-noto-cjk \
            gnupg \
            libssl1.0-dev \
            node-less \
            python3-num2words \
            python3-pip \
            python3-venv \
            python3-phonenumbers \
            python3-pyldap \
            python3-qrcode \
            python3-renderpm \
            python3-setuptools \
            python3-slugify \
            python3-vobject \
            python3-watchdog \
            python3-xlrd \
            python3-xlwt \
            xz-utils \
        && curl -o wkhtmltox.deb -sSL https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.stretch_amd64.deb \
        && echo '7e35a63f9db14f93ec7feeb0fce76b30c08f2057 wkhtmltox.deb' | sha1sum -c - \
        && apt-get install -y --no-install-recommends ./wkhtmltox.deb \
        && rm -rf /var/lib/apt/lists/* wkhtmltox.deb

# Install rtlcss (on Debian stretch)
RUN echo "deb http://deb.nodesource.com/node_8.x stretch main" > /etc/apt/sources.list.d/nodesource.list \
    && GNUPGHOME="$(mktemp -d)" \
    && export GNUPGHOME \
    && repokey='9FD3B784BC1C6FC31A8A0A1C1655A0AB68576280' \
    && gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "${repokey}" \
    && gpg --batch --armor --export "${repokey}" > /etc/apt/trusted.gpg.d/nodejs.gpg.asc \
    && gpgconf --kill all \
    && rm -rf "$GNUPGHOME" \
    && apt-get update \
    && apt-get install --no-install-recommends -y nodejs \
    && npm install -g rtlcss \
    && rm -rf /var/lib/apt/lists/*

ENV OD_HOME /opt/odoo/home
RUN mkdir -p /opt/odoo/app \
    && mkdir -p /opt/odoo/data

#RUN useradd -m -d $OD_HOME -s /bin/bash odoo
RUN useradd -rm -d $OD_HOME -s /bin/bash -g root -u 8069 odoo

# chang own
RUN mkdir -p ${OD_HOME}/venv \
    && chown -R odoo /opt/odoo

VOLUME ["/opt/odoo/app", "/opt/odoo/data", "/opt/odoo/home"]

WORKDIR /opt/odoo/home

# Expose Odoo services
EXPOSE 8069 8071 8072

# Set default user when running the container
USER odoo

#ENV VIRTUAL_ENV ${HOME}/venv
# virtual env
#RUN python3 -m venv ${HOME}/venv
#ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# CMD ["python3", "odoo-bin", "-c", "odoo.conf"]
CMD ["bash", "/opt/odoo/home/start-odoo.sh"]
